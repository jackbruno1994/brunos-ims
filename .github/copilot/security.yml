# Security Standards Configuration - Enterprise-Grade Security
# RBAC, AES-256 Encryption, Winston Logging, Rate Limiting, Security Headers

# Role-Based Access Control (RBAC)
rbac:
  # Role Definitions
  roles:
    super_admin:
      permissions: ['*']
      description: 'Full system access'
      max_sessions: 3

    admin:
      permissions:
        - 'users:read,create,update,delete'
        - 'inventory:read,create,update,delete'
        - 'orders:read,create,update,delete'
        - 'reports:read,create'
        - 'settings:read,update'
      description: 'Administrative access'
      max_sessions: 5

    manager:
      permissions:
        - 'inventory:read,create,update'
        - 'orders:read,create,update'
        - 'reports:read'
        - 'users:read'
      description: 'Management level access'
      max_sessions: 3

    staff:
      permissions:
        - 'inventory:read'
        - 'orders:read,create'
        - 'profile:read,update'
      description: 'Standard staff access'
      max_sessions: 2

    readonly:
      permissions:
        - 'inventory:read'
        - 'orders:read'
        - 'reports:read'
      description: 'Read-only access'
      max_sessions: 1

  # Permission Structure
  permissions:
    format: 'resource:action'
    actions: ['create', 'read', 'update', 'delete', 'execute']
    resources: ['users', 'inventory', 'orders', 'reports', 'settings', 'profile']

  # Access Control Implementation
  enforcement:
    middleware: 'rbac-middleware'
    cache_duration: '15m'
    session_validation: 'per_request'
    failed_attempts_lockout: 5
    lockout_duration: '30m'

# Encryption Standards (AES-256)
encryption:
  # AES-256 Configuration
  algorithm: 'aes-256-gcm'
  key_derivation: 'pbkdf2'
  key_iterations: 100000
  key_length: 32
  iv_length: 16
  tag_length: 16

  # Key Management
  key_rotation:
    frequency: 'quarterly'
    old_key_retention: '2_years'
    automated: true

  # Data Encryption Policies
  encrypt_at_rest:
    - 'user_passwords'
    - 'personal_information'
    - 'financial_data'
    - 'api_keys'
    - 'tokens'
    - 'sensitive_logs'

  encrypt_in_transit:
    - 'all_api_communication'
    - 'database_connections'
    - 'inter_service_communication'
    - 'file_uploads'

  # Environment Variables Security
  env_vars:
    encryption_key: 'ENCRYPTION_KEY'
    jwt_secret: 'JWT_SECRET'
    db_password: 'DB_PASSWORD'
    api_keys: 'API_KEYS'
    storage_path: '/secure/keys'

# Winston Audit Logging
logging:
  # Winston Configuration
  winston:
    levels:
      error: 0
      warn: 1
      info: 2
      http: 3
      debug: 4

    format: 'json'
    timestamp: true
    colorize: false

    # Transports
    transports:
      console:
        level: 'info'
        format: 'simple'
        colorize: true

      file:
        level: 'info'
        filename: 'logs/app.log'
        maxsize: '10MB'
        maxFiles: 10

      error_file:
        level: 'error'
        filename: 'logs/error.log'
        maxsize: '10MB'
        maxFiles: 5

      audit_file:
        level: 'info'
        filename: 'logs/audit.log'
        maxsize: '50MB'
        maxFiles: 20

  # Audit Logging Requirements
  audit_events:
    authentication:
      - 'login_success'
      - 'login_failure'
      - 'logout'
      - 'password_change'
      - 'password_reset'

    authorization:
      - 'permission_granted'
      - 'permission_denied'
      - 'role_assignment'
      - 'role_removal'

    data_access:
      - 'create_record'
      - 'read_sensitive_data'
      - 'update_record'
      - 'delete_record'
      - 'bulk_operations'

    system_events:
      - 'system_startup'
      - 'system_shutdown'
      - 'configuration_change'
      - 'backup_completion'
      - 'security_incident'

  # Log Data Structure
  log_structure:
    timestamp: 'ISO8601'
    level: 'string'
    message: 'string'
    user_id: 'string'
    session_id: 'string'
    ip_address: 'string'
    user_agent: 'string'
    resource: 'string'
    action: 'string'
    result: 'success|failure'
    error_code: 'string'
    additional_data: 'object'

# Rate Limiting with Express-rate-limit
rate_limiting:
  # Global Rate Limiting
  global:
    window_ms: 900000 # 15 minutes
    max_requests: 1000
    message: 'Too many requests from this IP, please try again later'
    standardHeaders: true
    legacyHeaders: false

  # Endpoint-Specific Limits
  endpoints:
    '/api/auth/login':
      window_ms: 900000 # 15 minutes
      max_requests: 5
      skip_successful_requests: true

    '/api/auth/register':
      window_ms: 3600000 # 1 hour
      max_requests: 3

    '/api/auth/forgot-password':
      window_ms: 3600000 # 1 hour
      max_requests: 3

    '/api/users':
      window_ms: 60000 # 1 minute
      max_requests: 100

    '/api/inventory':
      window_ms: 60000 # 1 minute
      max_requests: 200

    '/api/orders':
      window_ms: 60000 # 1 minute
      max_requests: 150

  # Advanced Rate Limiting
  advanced:
    # User-based rate limiting
    user_based: true
    user_key_generator: 'user_id'

    # IP whitelist
    ip_whitelist:
      - '127.0.0.1'
      - '::1'

    # Custom rate limit by user role
    role_based_limits:
      super_admin: 5000
      admin: 2000
      manager: 1000
      staff: 500
      readonly: 200

# Security Headers Configuration
security_headers:
  # Helmet.js Configuration
  helmet:
    contentSecurityPolicy:
      directives:
        defaultSrc: ["'self'"]
        styleSrc: ["'self'", "'unsafe-inline'", 'https://fonts.googleapis.com']
        fontSrc: ["'self'", 'https://fonts.gstatic.com']
        imgSrc: ["'self'", 'data:', 'https:']
        scriptSrc: ["'self'"]
        connectSrc: ["'self'"]
        frameSrc: ["'none'"]
        objectSrc: ["'none'"]
        upgradeInsecureRequests: true

    crossOriginEmbedderPolicy: false
    crossOriginOpenerPolicy: { policy: 'same-origin-allow-popups' }
    crossOriginResourcePolicy: { policy: 'cross-origin' }

    hsts:
      maxAge: 31536000
      includeSubDomains: true
      preload: true

    noSniff: true
    originAgentCluster: true
    permittedCrossDomainPolicies: false
    referrerPolicy: 'no-referrer'
    xssFilter: true

  # Custom Security Headers
  custom_headers:
    'X-Frame-Options': 'DENY'
    'X-Content-Type-Options': 'nosniff'
    'X-XSS-Protection': '1; mode=block'
    'Strict-Transport-Security': 'max-age=31536000; includeSubDomains; preload'
    'Cache-Control': 'no-store, no-cache, must-revalidate, proxy-revalidate'
    'Pragma': 'no-cache'
    'Expires': '0'

# Authentication & Authorization
authentication:
  # JWT Configuration
  jwt:
    algorithm: 'HS256'
    access_token_expiry: '15m'
    refresh_token_expiry: '7d'
    issuer: 'brunos-ims'
    audience: 'brunos-ims-users'

  # Password Policy
  password_policy:
    min_length: 12
    require_uppercase: true
    require_lowercase: true
    require_numbers: true
    require_special_chars: true
    prevent_common_passwords: true
    prevent_personal_info: true
    history_check: 5

  # Session Management
  session:
    secure: true
    httpOnly: true
    sameSite: 'strict'
    max_age: 900000 # 15 minutes
    rolling: true

# Input Validation & Sanitization
input_validation:
  # Validation Rules
  rules:
    email: 'valid_email_format'
    password: 'password_policy_compliant'
    phone: 'valid_phone_format'
    url: 'valid_url_format'
    sql_injection: 'sanitize_sql'
    xss: 'sanitize_html'

  # Sanitization
  sanitization:
    html: 'strip_all_tags'
    sql: 'parameterized_queries_only'
    nosql: 'object_validation'
    file_uploads: 'virus_scan_required'

# Security Monitoring & Incident Response
monitoring:
  # Security Events to Monitor
  events:
    - 'multiple_failed_logins'
    - 'privilege_escalation_attempts'
    - 'unusual_access_patterns'
    - 'data_exfiltration_attempts'
    - 'sql_injection_attempts'
    - 'xss_attempts'
    - 'brute_force_attacks'

  # Alerting Thresholds
  alerts:
    failed_login_threshold: 5
    unusual_access_threshold: 10
    data_access_threshold: 100

  # Incident Response
  incident_response:
    auto_lockout: true
    notification_channels: ['email', 'slack']
    escalation_levels: ['warning', 'critical', 'emergency']

# Data Privacy & Compliance
privacy:
  # GDPR Compliance
  gdpr:
    data_retention_period: '2_years'
    right_to_erasure: true
    data_portability: true
    consent_management: true

  # PII Protection
  pii_protection:
    identify_pii: true
    encrypt_pii: true
    mask_in_logs: true
    access_logging: true

  # Data Classification
  data_classification:
    public: 'no_protection_required'
    internal: 'access_control_required'
    confidential: 'encryption_required'
    restricted: 'high_security_required'
