name: Auto-merge PRs

on:
  pull_request:
    types: [opened, labeled, synchronize, reopened]
  check_suite:
    types: [completed]
  workflow_run:
    workflows: ['CI/CD Pipeline']
    types: [completed]

permissions:
  contents: write
  pull-requests: write
  checks: read

jobs:
  auto-merge:
    runs-on: ubuntu-latest
    if: >
      github.event_name != 'pull_request' ||
      contains(github.event.pull_request.labels.*.name, 'automerge')

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Wait for checks
        uses: fountainhead/action-wait-for-check@v1.2.0
        id: wait-for-checks
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          checkName: 'CI/CD Pipeline'
          ref: ${{ github.event.pull_request.head.sha }}
          timeoutSeconds: 1800

      - name: Check if PR is ready for auto-merge
        id: check-ready
        run: |
          # Check if all required checks have passed
          if [ "${{ steps.wait-for-checks.outputs.conclusion }}" = "success" ]; then
            echo "ready=true" >> $GITHUB_OUTPUT
          else
            echo "ready=false" >> $GITHUB_OUTPUT
          fi

      - name: Auto-merge PR
        if: steps.check-ready.outputs.ready == 'true'
        uses: pascalgn/merge-pull-request-action@v0.15.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          merge_method: squash
          commit_message_template: |
            {title} (#{number})

            {body}

            Co-authored-by: {author_name} <{author_email}>

  dependency-auto-merge:
    runs-on: ubuntu-latest
    if: >
      github.event_name != 'pull_request' ||
      (contains(github.event.pull_request.labels.*.name, 'dependencies') &&
       github.actor == 'dependabot[bot]')

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Dependabot metadata
        id: metadata
        uses: dependabot/fetch-metadata@v1.6.0
        with:
          github-token: '${{ secrets.GITHUB_TOKEN }}'

      - name: Wait for checks
        uses: fountainhead/action-wait-for-check@v1.2.0
        id: wait-for-checks
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          checkName: 'CI/CD Pipeline'
          ref: ${{ github.event.pull_request.head.sha }}
          timeoutSeconds: 1800

      - name: Auto-approve and merge minor/patch dependency updates
        if: >
          steps.wait-for-checks.outputs.conclusion == 'success' &&
          (steps.metadata.outputs.update-type == 'version-update:semver-patch' ||
           steps.metadata.outputs.update-type == 'version-update:semver-minor')
        run: |
          # Approve the PR
          gh pr review --approve "$PR_URL"

          # Enable auto-merge
          gh pr merge --auto --squash "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Comment on major dependency updates
        if: >
          steps.metadata.outputs.update-type == 'version-update:semver-major'
        run: |
          gh pr comment "$PR_URL" --body "ðŸš¨ Major version update detected. Manual review required before merging."
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
